name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

        steps:
            - uses: actions/checkout@v5

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install pytest pytest-cov flake8

            - name: Lint with flake8
              run: |
                  # Stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: Test API functionality (Linux/macOS)
              if: runner.os != 'Windows'
              run: |
                  cd tests/
                  python test_api.py

            - name: Test API functionality (Windows)
              if: runner.os == 'Windows'
              run: |
                  cd tests/
                  python test_api.py

            - name: Test widget core functionality
              run: |
                  cd tests/
                  python -m pytest test_widget.py -v --tb=short

            - name: Run diagnostic tests
              run: |
                  python weather_diagnostic.py

    code-quality:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install black isort mypy

            - name: Check code formatting with Black
              run: |
                  black --check --diff .

            - name: Check import sorting with isort
              run: |
                  isort --check-only --diff .

    security:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v5

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install safety bandit

            - name: Security check with Safety
              run: |
                  safety check

            - name: Security check with Bandit
              run: |
                  bandit -r src/ -f json -o bandit-report.json || true

            - name: Upload Bandit report
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: bandit-report
                  path: bandit-report.json
